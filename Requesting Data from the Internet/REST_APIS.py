# RESt: REpresentational State Transfer
    #  It originally had a more abstract meaning, but has come to be a shorthand name for
    #  web sites that act a bit like python functions, taking as inputs values 
    #  for certain parameters and producing outputs in the form of a long text string

# API: Application Programming Interface.
    # An API specifies how an external program 
    # (an application program) can request that a program perform certain computations

# -----
# Putting the two together, a REST API specifies how external programs can make HTTP requests 
# to a web site in order to request that some computation be carried out and data returned as output.
#  When a website is designed to accept requests generated by other computer programs, and produce
#   outputs to be consumed by other programs, it is sometimes called a web service, as opposed to 
#   a web site which produces output meant for humans to consume in a web browser.

# ----
# In a REST API, the client or application program– the kind of program you will be writing– makes 
# an HTTP request that includes information about what kind of request it is making. Web sites are 
# free to define whatever format they want for how the request should be formatted. This chapter 
# covers a particularly common and particularly simple format, where the request information is 
# encoded right in the URL. This is convenient, because if something goes wrong, we can debug by 
# copying the URL into a browser and see what happens when it tries to visit that URL.

# ---

# The get function in the requests module takes an optional parameter called params. 
# If a value is specified for that parameter, it should be a dictionary. The keys and
#  values in that dictionary are used to append something to the URL that is requested
#   from the remote site.

# ---
# If resp is a Response object returned by a call to requests.get(), which of the 
# following is a way to extract the contents into a python dictionary or list?

# ans: .json() invokes the json method
#     loads turns a json-formatted string into a list or dictionary