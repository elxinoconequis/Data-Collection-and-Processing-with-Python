# Caching response content (as in cache)
# Por que no podemos depedner 100% en un servidor es convenntieto lamacenar algunos del los reustados que ya
# hemos consultado, eso e sguardar en un caché.
# 
import requests

resp = requests.get()

# a = requests.Response() - > is a REponse object with (text, url)

# You haven’t experienced it yet, but if you get complicated data back from a REST API, 
# it may take you many tries to compose and debug code that processes that data in the way that you want. (See the Nested Data chapter.) It is a good practice, for many reasons, not to keep contacting a REST API to re-request the same data every time you run your program.

# To avoid re-requesting the same data, we will use a programming pattern known as caching. 
# It works like this:
# 1.-Before doing some expensive operation (like calling requests.get to get data from a REST API), 
# check whether you have already saved (“cached”) the results that would be generated by making that request.

# 2.- If so, return that same data.

# 3.- If not, perform the expensive operation and save (“cache”) the results (e.g. the complicated data)
#  in your cache so you won’t have to perform it again the next time.
